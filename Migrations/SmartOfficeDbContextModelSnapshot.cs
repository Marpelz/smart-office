// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartOffice;

#nullable disable

namespace SmartOffice.Migrations
{
    [DbContext(typeof(SmartOfficeDbContext))]
    partial class SmartOfficeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SmartOffice.Models.MenuModels.MenuViewModel", b =>
                {
                    b.Property<string>("FoodorderFoodMenuIdProp")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("MenuId");

                    b.Property<string>("FoodorderFoodAdditionalSelectionProp")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("MenuFoodAdditionalSelection");

                    b.Property<string>("FoodorderFoodCategoryProp")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("MenuFoodCategory");

                    b.Property<string>("FoodorderFoodContentsProp")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("MenuFoodContents");

                    b.Property<string>("FoodorderFoodDesignationProp")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("MenuFoodDesignation");

                    b.Property<string>("FoodorderFoodNumberProp")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("MenuFoodNumber");

                    b.Property<string>("FoodorderFoodPriceProp")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("MenuFoodPrice");

                    b.Property<string>("FoodorderFoodRestaurantIdProp")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("MenuRestId");

                    b.HasKey("FoodorderFoodMenuIdProp");

                    b.ToTable("SoMenuTab", (string)null);
                });

            modelBuilder.Entity("SmartOffice.Models.RestaurantModels.RestaurantViewModel", b =>
                {
                    b.Property<string>("FoodorderRestaurantIdProp")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("RestId");

                    b.Property<string>("FoodorderRestaurantCityProp")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("RestCity");

                    b.Property<string>("FoodorderRestaurantDeliveryCostProp")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("RestDeliveryCost");

                    b.Property<string>("FoodorderRestaurantDeliveryTimeProp")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("RestDeliveryTime");

                    b.Property<string>("FoodorderRestaurantDeliveryYesNoProp")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("RestDelivery");

                    b.Property<string>("FoodorderRestaurantLieferandoLinkProp")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("RestLieferandoLink");

                    b.Property<string>("FoodorderRestaurantMinimalOrderValueProp")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("RestMinOrderValue");

                    b.Property<string>("FoodorderRestaurantNameProp")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("RestName");

                    b.Property<string>("FoodorderRestaurantOrdertypeAppTelephoneProp")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("RestAppTelephone");

                    b.Property<string>("FoodorderRestaurantPhonenumberProp")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("RestPhonenumber");

                    b.Property<string>("FoodorderRestaurantStreetProp")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("RestStreet");

                    b.Property<string>("FoodorderRestaurantTypeProp")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("RestType");

                    b.Property<string>("FoodorderRestaurantZipcodeProp")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("RestZipcode");

                    b.HasKey("FoodorderRestaurantIdProp");

                    b.ToTable("SoRestTab", (string)null);
                });

            modelBuilder.Entity("SmartOffice.Models.UserModels.UserModel", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("ActivePaypal")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PaypalEmail")
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserPassword")
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.ToTable("SoUserTab", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
