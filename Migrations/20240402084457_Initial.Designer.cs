// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartOffice;

#nullable disable

namespace SmartOffice.Migrations
{
    [DbContext(typeof(SmartOfficeDbContext))]
    [Migration("20240402084457_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SmartOffice.Models.MenuModels.DishViewModel", b =>
                {
                    b.Property<string>("FoodorderDishIdProp")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("DishId");

                    b.Property<string>("FoodorderDishAdditionalSelectionProp")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("DishAdditionalSelection");

                    b.Property<string>("FoodorderDishCategoryProp")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("DishCategory");

                    b.Property<string>("FoodorderDishContentsProp")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("DishContents");

                    b.Property<string>("FoodorderDishDesignationProp")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("DishDesignation");

                    b.Property<string>("FoodorderDishNumberProp")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("DishNumber");

                    b.Property<string>("FoodorderDishPriceProp")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("DishPrice");

                    b.Property<string>("FoodorderDishRestaurantIdProp")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("DishRestId");

                    b.HasKey("FoodorderDishIdProp");

                    b.HasIndex("FoodorderDishRestaurantIdProp");

                    b.ToTable("SoDishTab", (string)null);
                });

            modelBuilder.Entity("SmartOffice.Models.RestaurantModels.RestaurantViewModel", b =>
                {
                    b.Property<string>("FoodorderRestaurantIdProp")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("RestId");

                    b.Property<string>("FoodorderRestaurantCityProp")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("RestCity");

                    b.Property<string>("FoodorderRestaurantDeliveryCostProp")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("RestDeliveryCost");

                    b.Property<string>("FoodorderRestaurantDeliveryTimeProp")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("RestDeliveryTime");

                    b.Property<string>("FoodorderRestaurantDeliveryYesNoProp")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("RestDelivery");

                    b.Property<string>("FoodorderRestaurantLieferandoLinkProp")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("RestLieferandoLink");

                    b.Property<string>("FoodorderRestaurantMinimalOrderValueProp")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("RestMinOrderValue");

                    b.Property<string>("FoodorderRestaurantNameProp")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("RestName");

                    b.Property<string>("FoodorderRestaurantOrdertypeAppTelephoneProp")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("RestAppTelephone");

                    b.Property<string>("FoodorderRestaurantPhonenumberProp")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("RestPhonenumber");

                    b.Property<string>("FoodorderRestaurantStreetProp")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("RestStreet");

                    b.Property<string>("FoodorderRestaurantTypeProp")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("RestType");

                    b.Property<string>("FoodorderRestaurantZipcodeProp")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("RestZipcode");

                    b.HasKey("FoodorderRestaurantIdProp");

                    b.ToTable("SoRestTab", (string)null);
                });

            modelBuilder.Entity("SmartOffice.Models.UserModels.UserModel", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("ActivePaypal")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PaypalEmail")
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserPassword")
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.ToTable("SoUserTab", (string)null);
                });

            modelBuilder.Entity("SmartOffice.Models.MenuModels.DishViewModel", b =>
                {
                    b.HasOne("SmartOffice.Models.RestaurantModels.RestaurantViewModel", "Restaurant")
                        .WithMany("Dishes")
                        .HasForeignKey("FoodorderDishRestaurantIdProp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("SmartOffice.Models.RestaurantModels.RestaurantViewModel", b =>
                {
                    b.Navigation("Dishes");
                });
#pragma warning restore 612, 618
        }
    }
}
